<?php

define('DOING_AJAX', true);

define('ABSPATH', false);
define('ELEMENTOR_VERSION', '2.1.6');
define('ELEMENTOR_PREVIOUS_STABLE_VERSION', '2.0.16');

define('ELEMENTOR__FILE__', __FILE__);
define('ELEMENTOR_PLUGIN_BASE', '');
define('ELEMENTOR_PATH', drupal_get_path('module', 'elementor') . '/elementor/');
if (defined('ELEMENTOR_TESTS') && ELEMENTOR_TESTS) {
    define('ELEMENTOR_URL', 'file://' . ELEMENTOR_PATH);
} else {
    define('ELEMENTOR_URL', '');
}
define('ELEMENTOR_MODULES_PATH', '');
define('ELEMENTOR_ASSETS_URL', '/' . ELEMENTOR_PATH . 'assets/');

require drupal_get_path('module', 'elementor') . '/drupal_elementor/wordpress_functions.php';

require drupal_get_path('module', 'elementor') . '/elementor/includes/plugin.php';

require drupal_get_path('module', 'elementor') . '/drupal_elementor/template-library/classes/class-import-images.php';
require drupal_get_path('module', 'elementor') . '/drupal_elementor/template-library/sources/remote.php';
require drupal_get_path('module', 'elementor') . '/drupal_elementor/template-library/sources/local.php';
require drupal_get_path('module', 'elementor') . '/drupal_elementor/template-library/manager.php';

require drupal_get_path('module', 'elementor') . '/drupal_elementor/Drupal_Revisions_Manager.php';
require drupal_get_path('module', 'elementor') . '/drupal_elementor/Drupal_Ajax_Manager.php';
require drupal_get_path('module', 'elementor') . '/drupal_elementor/DocumentDrupal.php';
require drupal_get_path('module', 'elementor') . '/drupal_elementor/ElementorDrupal.php';

use Drupal\elementor\ElementorDrupal;

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function elementor_theme_suggestions_node(array $variables)
{
    $suggestions = [];
    $node = $variables['elements']['#node'];
    $allow_content_types = \Drupal::config('elementor.settings')->get('node_types');

    if (in_array($node->getType(), $allow_content_types, true)) {
        $suggestions[] = 'elementor_field';
    }

    return $suggestions;
}

/**
 * Implements hook_preprocess().
 */

function elementor_preprocess_elementor_field(&$variables, $hook)
{
    $uid = $variables['elements']['#node']->id();
    $ElementorDrupal = ElementorDrupal::$instance;
    $frontend_data = $ElementorDrupal->frontend($uid);

    $variables['base_path'] = base_path();
    $variables['elementor_tmp'] = $frontend_data;
    $variables['uid'] = $uid;
    $variables['#cache'] = ['max-age' => 0];
}

/**
 * Implements hook__menu_local_tasks_alter().
 */

function elementor_menu_local_tasks_alter(&$data, $route_name)
{
    $allow_content_types = \Drupal::config('elementor.settings')->get('node_types');
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node) {
        $nid = $node->id();
    } else {
        $nid = 1;
    }
    if ($route_name == 'entity.node.canonical' && in_array($node->getType(), $allow_content_types, true)) {
        $data['tabs'][0]['entity.node.canonical'] = [
            '#theme' => 'menu_local_task',
            '#link' => [
                'title' => t('Elementor'),
                'url' => \Drupal\Core\Url::fromRoute('elementor.editor', ['node' => $nid]),
                'localized_options' => [
                    'attributes' => [
                        'title' => t('Edit with Elementor'),
                    ],
                ],
            ],
        ];
    }
}

/**
 * Implements hook_theme().
 */

function elementor_theme($existing, $type, $theme, $path)
{
    return array(
        'elementor_field' => array(
            'variables' => array('elementor_data' => null, 'elementor_tmp' => null, 'base_path' => base_path()),
        ),
        'elementor_editor' => array(
            'variables' => array('elementor_data' => null),
        ),
    );
}
